name: CI Staging
on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging
jobs:
  build:
    runs-on: ubuntu-latest
    env:
     RAILS_ENV: test
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: password
     RAILS_MASTER_KEY: a93dec2096ec8d5818ee9f598bbac9569e8a3cdb2e60309fb69feae094c8cfdbfd9cd669088d2f1e165eefacf5c363f31bbfec44ec45f484c6ab22d24ce2e8b3

    # Similar to docker-compose.yml but not the same, ü§∑‚Äç‚ôÇÔ∏è
    services:
      postgres:
        image: postgres:11.6-alpine
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ruby version specified in `.ruby-version`
        uses: eregon/use-ruby-action@master # this will use by default the .ruby-version file in your repository

      - name: Install required apt packages
        run: |
          sudo apt-get -y install libpq-dev

      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}

      - name: Read Node.js version to install from `.nvmrc`
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Install required Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Yarn install
        run: yarn --frozen-lockfile

      - name: Rubocop
        run:  bundle exec rubocop

      - name: Rails Rspec
        run: |
          bundle exec rails db:setup
          bundle exec rspec  --format html --out tmp/rspec/rspec-report.html

      - name: Upload Rspec results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: rspec-repost
          path: tmp/rspec

      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-repost
          path: tmp/coverage